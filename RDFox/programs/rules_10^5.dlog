@prefix : <http://example.org/> .
# Rule 1
[ ?N0, :argument_1_of, ?head_arguments ],
[ ?N1, :argument_2_of, ?head_arguments ],
[ ?N2, :argument_3_of, ?head_arguments ],
[ ?head_arguments, :nAryPred, ?newInterval ],
[ ?newInterval, :nAryPred, :g5],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g8, :hasArity, 3 ],
        [ ?N0, :argument_1_of , ?joinedArgument ],
        [ ?N2, :argument_2_of , ?joinedArgument ],
        [ ?N1, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g8],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       BIND ( MAXFN( ?start1 + 1 ) AS ?start ),
       BIND ( MINFN( ?end1 + 3 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       SKOLEM ( "n-ary parameters", ?N0, ?N1, ?N2, ?head_arguments ),
       FILTER( ?start <= ?end ).

# Rule 2
[ ?N0, :g6, ?newInterval ],
[ ?newInterval, :g6, ?N1],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g10, :hasArity, 3 ],
        [ ?NA1, :argument_1_of , ?joinedArgument ],
        [ ?N1, :argument_2_of , ?joinedArgument ],
        [ ?N0, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g10],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       BIND ( MAXFN( ?start1 ) AS ?start ),
       BIND ( MINFN( ?end1 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       FILTER( ?start <= ?end ).

# Rule 3
[ ?N0, :argument_1_of, ?head_arguments ],
[ ?N1, :argument_2_of, ?head_arguments ],
[ ?N2, :argument_3_of, ?head_arguments ],
[ ?head_arguments, :nAryPred, ?newInterval ],
[ ?newInterval, :nAryPred, :g7],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g3, :hasArity, 3 ],
        [ ?N0, :argument_1_of , ?joinedArgument ],
        [ ?N1, :argument_2_of , ?joinedArgument ],
        [ ?N2, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g3],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       [ :g4, :hasArity, 3 ],
        [ ?N0, :argument_1_of , ?joinedArgument ],
        [ ?N1, :argument_2_of , ?joinedArgument ],
        [ ?N2, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval2 ],
       [ ?interval2, :nAryPred, :g4],
       [ ?interval2, a, :Interval],
       [ ?interval2, :from, ?start2],
       [ ?interval2, :to, ?end2],
       BIND ( MAXFN( ?start1, ?start2 ) AS ?start ),
       BIND ( MINFN( ?end1, ?end2 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       SKOLEM ( "n-ary parameters", ?N0, ?N1, ?N2, ?head_arguments ),
       FILTER( ?start <= ?end ).

# Rule 4
[ ?N0, :argument_1_of, ?head_arguments ],
[ ?N1, :argument_2_of, ?head_arguments ],
[ ?N2, :argument_3_of, ?head_arguments ],
[ ?head_arguments, :nAryPred, ?newInterval ],
[ ?newInterval, :nAryPred, :g8],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g7, :hasArity, 3 ],
        [ ?N0, :argument_1_of , ?joinedArgument ],
        [ ?N2, :argument_2_of , ?joinedArgument ],
        [ ?N1, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g7],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       BIND ( MAXFN( ?start1 ) AS ?start ),
       BIND ( MINFN( ?end1 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       SKOLEM ( "n-ary parameters", ?N0, ?N1, ?N2, ?head_arguments ),
       FILTER( ?start <= ?end ).

# Rule 5
[ ?N0, :argument_1_of, ?head_arguments ],
[ ?N1, :argument_2_of, ?head_arguments ],
[ ?N2, :argument_3_of, ?head_arguments ],
[ ?head_arguments, :nAryPred, ?newInterval ],
[ ?newInterval, :nAryPred, :g8],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g9, :hasArity, 3 ],
        [ ?N1, :argument_1_of , ?joinedArgument ],
        [ ?N2, :argument_2_of , ?joinedArgument ],
        [ ?N0, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g9],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       BIND ( MAXFN( ?start1 ) AS ?start ),
       BIND ( MINFN( ?end1 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       SKOLEM ( "n-ary parameters", ?N0, ?N1, ?N2, ?head_arguments ),
       FILTER( ?start <= ?end ).

# Rule 6
[ ?N0, :argument_1_of, ?head_arguments ],
[ ?N1, :argument_2_of, ?head_arguments ],
[ ?N2, :argument_3_of, ?head_arguments ],
[ ?head_arguments, :nAryPred, ?newInterval ],
[ ?newInterval, :nAryPred, :g9],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g10, :hasArity, 3 ],
        [ ?N2, :argument_1_of , ?joinedArgument ],
        [ ?N0, :argument_2_of , ?joinedArgument ],
        [ ?N1, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g10],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       BIND ( MAXFN( ?start1 ) AS ?start ),
       BIND ( MINFN( ?end1 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       SKOLEM ( "n-ary parameters", ?N0, ?N1, ?N2, ?head_arguments ),
       FILTER( ?start <= ?end ).

# Rule 7
[ ?N0, :argument_1_of, ?head_arguments ],
[ ?N1, :argument_2_of, ?head_arguments ],
[ ?N2, :argument_3_of, ?head_arguments ],
[ ?head_arguments, :nAryPred, ?newInterval ],
[ ?newInterval, :nAryPred, :g9],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g2, :hasArity, 3 ],
        [ ?N1, :argument_1_of , ?joinedArgument ],
        [ ?N2, :argument_2_of , ?joinedArgument ],
        [ ?N0, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g2],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       BIND ( MAXFN( ?start1 ) AS ?start ),
       BIND ( MINFN( ?end1 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       SKOLEM ( "n-ary parameters", ?N0, ?N1, ?N2, ?head_arguments ),
       FILTER( ?start <= ?end ).

# Rule 8
[ ?N0, :argument_1_of, ?head_arguments ],
[ ?N1, :argument_2_of, ?head_arguments ],
[ ?N2, :argument_3_of, ?head_arguments ],
[ ?head_arguments, :nAryPred, ?newInterval ],
[ ?newInterval, :nAryPred, :g10],
[ ?newInterval, :from, ?start],
[ ?newInterval, :to, ?end],
[ ?newInterval, a, :Interval] :-
       [ :g1, :hasArity, 3 ],
        [ ?N2, :argument_1_of , ?joinedArgument ],
        [ ?N1, :argument_2_of , ?joinedArgument ],
        [ ?N0, :argument_3_of , ?joinedArgument ],
       [ ?joinedArgument, :nAryPred, ?interval1 ],
       [ ?interval1, :nAryPred, :g1],
       [ ?interval1, a, :Interval],
       [ ?interval1, :from, ?start1],
       [ ?interval1, :to, ?end1],
       BIND ( MAXFN( ?start1 ) AS ?start ),
       BIND ( MINFN( ?end1 ) AS ?end ),
       SKOLEM ( "Time interval", ?start, ?end, ?newInterval ),
       SKOLEM ( "n-ary parameters", ?N0, ?N1, ?N2, ?head_arguments ),
       FILTER( ?start <= ?end ).

